var documenterSearchIndex = {"docs":
[{"location":"#ReversedSeries","page":"Home","title":"ReversedSeries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ReversedSeries.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#ReversedSeries.Reversed","page":"Home","title":"ReversedSeries.Reversed","text":"struct Reversed{T<:AbstractArray}\n\nA::AbstractArray\n\nThis presents a reversed view of anything array-like.\n\nCredit: @simsurace\n\nExample\n\njulia> a = [1, 2, 3]\njulia> r = Reversed(a)\njulia> r[1]\n3\njulia> r[3]\n1\njulia> a[end] == r[1]\ntrue\n\n\n\n\n\n","category":"type"},{"location":"#ReversedSeries.ReversedFrame","page":"Home","title":"ReversedSeries.ReversedFrame","text":"struct ReversedFrame{df<:DataFrames.DataFrame}\n\n__df::DataFrames.DataFrame\n__s::Dict\n\nThis presents a reversed view of an entire DataFrame.\n\nExample\n\njulia> rf = ReversedFrame(btcusd) # btcusd is a DataFrame\njulia> rf.ts[1] # the most recent timestamp\njulia> rf.ts[2] # the timestamp before that\njulia> rf.c[1]  # the close at 1 corresponds with the timestamp at 1\njulia> rf.o[1] == btcusd.o[end]\ntrue\n\nIndex 1 is the origin and represents the present time.\nHigher indices go back in time.\nThis is similar to how series are indexed in TradingView's PineScript except they use a 0-based index.\n\n\n\n\n\n","category":"type"},{"location":"#Base.getindex-Tuple{ReversedFrame, Symbol}","page":"Home","title":"Base.getindex","text":"getindex(rf::ReversedFrame, k::Symbol) -> Any\n\n\nReturn a reversed view of a DataFrame column via indexing.\n\nExample\n\njulia> rf = ReversedFrame(DataFrame(o=[1,2,3]))\njulia> rf[:o]\nReversed{Vector{Int64}}([1, 2, 3])\n\njulia> rf[:o][1]\n3\n\n\n\n\n\n","category":"method"},{"location":"#Base.getproperty-Tuple{ReversedFrame, Symbol}","page":"Home","title":"Base.getproperty","text":"getproperty(rf::ReversedFrame, k::Symbol) -> Any\n\n\nReturn a reversed view of a DataFrame column via key.\n\nExample\n\njulia> rf = ReversedFrame(DataFrame(o=[1,2,3]))\njulia> rf.o\nReversed{Vector{Int64}}([1, 2, 3])\n\njulia> rf.o[1]\n3\n\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.crossed_down-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.crossed_down","text":"crossed_down(a, b; i) -> Any\n\n\nDid series a become less than series b at index i.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.crossed_down_currently-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.crossed_down_currently","text":"crossed_down_currently(a, b; i) -> Any\n\n\nIs series a currently less than series b?\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.crossed_up-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.crossed_up","text":"crossed_up(a, b; i) -> Any\n\n\nDid series a become greater than series b at index i.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.crossed_up_currently-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.crossed_up_currently","text":"crossed_up_currently(a, b; i) -> Any\n\n\nIs series a currently greater than series b?\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.find_clusters-Tuple{ReversedFrame, Integer, Function}","page":"Home","title":"ReversedSeries.find_clusters","text":"find_clusters(\n    rf::ReversedFrame,\n    max::Integer,\n    fn::Function;\n    close\n) -> Vector{Any}\n\n\nReturn a vector of vector of indices of consecutive candles that satisfy the given function.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.find_index-Tuple{AbstractArray, Function}","page":"Home","title":"ReversedSeries.find_index","text":"find_index(\n    collection::AbstractArray,\n    testfn::Function\n) -> Any\n\n\nGiven a collection and a test function, return the index of the first item that returns true for testfn(collection[i]). If nothing is found, return missing. This is a port of JavaScript's Array.prototype.findIndex.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.find_local_high-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.find_local_high","text":"find_local_high(rf, cluster; close) -> Any\n\n\nOut of the cluster, which index had the highest close?\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.find_local_low-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.find_local_low","text":"find_local_low(rf, cluster; close) -> Any\n\n\nOut of the cluster, which index had the lowest close?\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.high_enough_fn-Tuple{AbstractFloat}","page":"Home","title":"ReversedSeries.high_enough_fn","text":"high_enough_fn(\n    threshold::AbstractFloat;\n    high,\n    upper,\n    lower\n) -> ReversedSeries.var\"#5#6\"{Symbol, Symbol, Symbol, <:AbstractFloat}\n\n\nReturn a function that tries to find highs by their proximity to the BB upper bands\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.low_enough_fn-Tuple{AbstractFloat}","page":"Home","title":"ReversedSeries.low_enough_fn","text":"low_enough_fn(\n    threshold::AbstractFloat;\n    low,\n    upper,\n    lower\n) -> ReversedSeries.var\"#2#3\"{Symbol, Symbol, Symbol, <:AbstractFloat}\n\n\nReturn a function that tries to find lows by their proximity to the BB lower bands\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.negative_slope_currently-Tuple{Any}","page":"Home","title":"ReversedSeries.negative_slope_currently","text":"negative_slope_currently(a; i, back) -> Any\n\n\nReturn true if a is currently sloping down.  In other words, a[i] < a[i+back].\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.percent_change-Tuple{Any}","page":"Home","title":"ReversedSeries.percent_change","text":"percent_change(a; i, back) -> Any\n\n\nReturn the percent change of series a the previous value to the current value. If you want to compare the current value to a value further in the past, increase the value of back.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.percent_difference-Tuple{Any, Any}","page":"Home","title":"ReversedSeries.percent_difference","text":"percent_difference(a, b; i) -> Any\n\n\nReturn the percent difference between a[i] and b[i].  If either value is missing, return missing.\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.positive_slope_currently-Tuple{Any}","page":"Home","title":"ReversedSeries.positive_slope_currently","text":"positive_slope_currently(a; i, back) -> Any\n\n\nReturn true if a is currently sloping up.  In other words, a[i] > a[i+back].\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.regular_bearish_divergence-Tuple{ReversedFrame}","page":"Home","title":"ReversedSeries.regular_bearish_divergence","text":"regular_bearish_divergence(\n    rf::ReversedFrame;\n    indicator,\n    high,\n    upper,\n    lower,\n    age_threshold,\n    gap_threshold,\n    peak_threshold\n) -> Any\n\n\nReturn true if regular bearish divergence on the given indicator was detected near index 1. Note that Bollinger Bands are used to help detect divergence, so their presence is required in the rf in addition to the indicator that's being tested for divergence.\n\nKeyword Arguments\n\nargument default description\nindicator :rsi14 Name in rf of the indicator being tested\nhigh :h Name in rf of the OHLCV high value\nupper :bb_upper Name in rf of the upper band of the BBs\nlower :bb_lower Name in rf of the lower band of the BBs\nage_threshold 1 ?\ngap_threshold (7,30) ?\npeak_threshold 9.0 ?\n\nExample\n\njulia> regular_bearish_divergence(rf)\n\n\n\n\n\n","category":"method"},{"location":"#ReversedSeries.regular_bullish_divergence-Tuple{ReversedFrame}","page":"Home","title":"ReversedSeries.regular_bullish_divergence","text":"regular_bullish_divergence(\n    rf::ReversedFrame;\n    indicator,\n    low,\n    upper,\n    lower,\n    age_threshold,\n    gap_threshold,\n    peak_threshold\n) -> Any\n\n\nReturn true if regular bullish divergence on the given indicator was detected near index 1. Note that Bollinger Bands are used to help detect divergence, so their presence is required in the rf in addition to the indicator that's being tested for divergence.\n\nKeyword Arguments\n\nargument default description\nindicator :rsi14 Name in rf of the indicator being tested\nlow :l Name in rf of the OHLCV high value\nupper :bb_upper Name in rf of the upper band of the BBs\nlower :bb_lower Name in rf of the lower band of the BBs\nage_threshold 1 ?\ngap_threshold (7,30) ?\npeak_threshold 9.0 ?\n\nExample\n\njulia> regular_bullish_divergence(rf)\n\n\n\n\n\n","category":"method"}]
}
